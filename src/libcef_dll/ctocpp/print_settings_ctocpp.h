// Copyright (c) 2014 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#ifndef CEF_LIBCEF_DLL_CTOCPP_PRINT_SETTINGS_CTOCPP_H_
#define CEF_LIBCEF_DLL_CTOCPP_PRINT_SETTINGS_CTOCPP_H_
#pragma once

#ifndef USING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed wrapper-side only")
#else  // USING_CEF_SHARED

#include "include/cef_print_settings.h"
#include "include/capi/cef_print_settings_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefPrintSettingsCToCpp
    : public CefCToCpp<CefPrintSettingsCToCpp, CefPrintSettings,
        cef_print_settings_t> {
 public:
  explicit CefPrintSettingsCToCpp(cef_print_settings_t* str)
      : CefCToCpp<CefPrintSettingsCToCpp, CefPrintSettings,
          cef_print_settings_t>(str) {}

  // CefPrintSettings methods
  virtual bool IsValid() OVERRIDE;
  virtual bool IsReadOnly() OVERRIDE;
  virtual CefRefPtr<CefPrintSettings> Copy() OVERRIDE;
  virtual void SetOrientation(bool landscape) OVERRIDE;
  virtual bool IsLandscape() OVERRIDE;
  virtual void SetPrinterPrintableArea(
      const CefSize& physical_size_device_units,
      const CefRect& printable_area_device_units,
      bool landscape_needs_flip) OVERRIDE;
  virtual void SetDeviceName(const CefString& name) OVERRIDE;
  virtual CefString GetDeviceName() OVERRIDE;
  virtual void SetDPI(int dpi) OVERRIDE;
  virtual int GetDPI() OVERRIDE;
  virtual void SetPageRanges(const PageRangeList& ranges) OVERRIDE;
  virtual size_t GetPageRangesCount() OVERRIDE;
  virtual void GetPageRanges(PageRangeList& ranges) OVERRIDE;
  virtual void SetSelectionOnly(bool selection_only) OVERRIDE;
  virtual bool IsSelectionOnly() OVERRIDE;
  virtual void SetCollate(bool collate) OVERRIDE;
  virtual bool WillCollate() OVERRIDE;
  virtual void SetColorModel(ColorModel model) OVERRIDE;
  virtual ColorModel GetColorModel() OVERRIDE;
  virtual void SetCopies(int copies) OVERRIDE;
  virtual int GetCopies() OVERRIDE;
  virtual void SetDuplexMode(DuplexMode mode) OVERRIDE;
  virtual DuplexMode GetDuplexMode() OVERRIDE;
};

#endif  // USING_CEF_SHARED
#endif  // CEF_LIBCEF_DLL_CTOCPP_PRINT_SETTINGS_CTOCPP_H_

